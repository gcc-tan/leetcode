//Interleaving String


/*
Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.

For example,
Given:
s1 = "aabcc",
s2 = "dbbca",

When s3 = "aadbbcbcac", return true.
When s3 = "aadbbbaccc", return false.
*/

/*
题目的意思是判断给定字符串s3能否由s1,和s2交替取一部分得到
---------------------------------------------------------------------------------------------------------------------------------------------
其实动态规划就是递归的一种较为高效的实现，因为动态规划利用数组存储了子问题的解，所以没有重复计算和遍历子问题，所以大大提高了程序的运行效率

这个题目拿到手里面有种不知所措的感觉，动态规划的状态转移方程又看着有些问题，所以先写一个递归求解的版本，再来看看这个动态规划的解决方案
*/

//递归求解的实现，效率很低
class Solution 
{
public:
    bool isInterleave(string s1, string s2, string s3) 
	{

    }
};
